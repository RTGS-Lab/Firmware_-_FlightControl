name: Manual Release

# This workflow can only be triggered manually
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release'
        required: false
        default: ''
        type: string
      force_version_increment:
        description: 'Force version increment'
        required: false
        default: 'yes'
        type: string
      release_notes:
        description: 'Custom release notes'
        required: false
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      firmware-path: ${{ steps.compile.outputs.firmware-path }}
      firmware-version: ${{ steps.compile.outputs.firmware-version }}
      firmware-version-updated: ${{ steps.compile.outputs.firmware-version-updated }}
      release-url: ${{ steps.release.outputs.html_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Compile application
        id: compile
        uses: particle-iot/compile-action@v1
        with:
          particle-platform-name: 'bsom'
          auto-version: ${{ github.event.inputs.force_version_increment == 'yes' }}
          device-os-version: 6.2.1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            ${{ steps.compile.outputs.firmware-path }}
            ${{ steps.compile.outputs.target-path }}

      - name: Create archive of target directory
        if: steps.compile.outputs.firmware-version-updated == 'true'
        run: |
          tar -czf debug-objects.tar.gz ${{ steps.compile.outputs.target-path }}

      - name: Create GitHub release
        id: release
        if: steps.compile.outputs.firmware-version-updated == 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ steps.compile.outputs.firmware-path }},debug-objects.tar.gz
          generateReleaseNotes: ${{ github.event.inputs.release_notes == '' }}
          body: ${{ github.event.inputs.release_notes }}
          name: "Firmware v${{ steps.compile.outputs.firmware-version }} (Manual)"
          tag: "v${{ steps.compile.outputs.firmware-version }}-manual"
          commit: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true